{"code": "gASVgxEAAAAAAAAoQyqXAHQBAAAAAAAAAAAAAGQBfA18EKwCpgMAAKsDAAAAAAAAAAABAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwEcnVsZZSMCWNvbmRhX2VudpSMDWNvbnRhaW5lcl9pbWeUjBBzaW5ndWxhcml0eV9hcmdzlIwPdXNlX3Npbmd1bGFyaXR5lIwLZW52X21vZHVsZXOUjAxiZW5jaF9yZWNvcmSUjAVqb2JpZJSMCGlzX3NoZWxslIwPYmVuY2hfaXRlcmF0aW9ulIwPY2xlYW51cF9zY3JpcHRzlIwKc2hhZG93X2RpcpSMDWVkaXRfbm90ZWJvb2uUjA9jb25kYV9iYXNlX3BhdGiUjAdiYXNlZGlylIwQc291cmNlY2FjaGVfcGF0aJSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5Y1A8AAAogICAgICAgIG5hbWU9JChlY2hvIHtwYXJhbXMubXlfc2FtcGxlfSkKICAgICAgICByYXdfc2l6ZT0kKHB5dGhvbjMge2dldF9qc29ufSB7aW5wdXQuanNvbn0gc3VtbWFyeSxiZWZvcmVfZmlsdGVyaW5nLHRvdGFsX2Jhc2VzKQogICAgICAgIHJhd19yZWFkX251bT0kKHB5dGhvbjMge2dldF9qc29ufSB7aW5wdXQuanNvbn0gc3VtbWFyeSxiZWZvcmVfZmlsdGVyaW5nLHRvdGFsX3JlYWRzKQogICAgICAgIHRyaW1lZF9yZWFkX251bT0kKHB5dGhvbjMge2dldF9qc29ufSB7aW5wdXQuanNvbn0gc3VtbWFyeSxhZnRlcl9maWx0ZXJpbmcsdG90YWxfcmVhZHMpCiAgICAgICAgbW9kZWxfcmVhZF9udW09JCh3YyAtbCA8IHtpbnB1dC5mcX0pCiAgICAgICAgZHVwX3JhZGlvMT0kKHB5dGhvbjMge2dldF9qc29ufSB7aW5wdXQuanNvbn0gZHVwbGljYXRpb24scmF0ZSkKCiAgICAgICAgY2xlYW5fcmVhZF9udW09JChzYW10b29scyB2aWV3IC1jIHtpbnB1dC5iYW19KSAKICAgICAgICBkZV9yZWFkX251bT0kKHNhbXRvb2xzIHZpZXcgLWMge2lucHV0LmRlZHVwX2JhbX0pCiAgICAgICAgbWFwX3JlYWRfbnVtPSQoc2FtdG9vbHMgdmlldyAtYyAtRiA0IHtpbnB1dC5iYW19KQogICAgICAgIAogICAgICAgIGNvdmVyPSQoc2VkIC1uICdzLy4qVGhlcmUgaXMgYSBcKFswLTkuXSpcKVwlIG9mIHJlZmVyZW5jZSB3aXRoIGEgY292ZXJhZ2VEYXRhID49IDFYLiovXDEvcCcge2lucHV0LmNvdmVyfSkKICAgICAgICByZWZfc2l6ZT0kKHNlZCAtbiAncy8uKm51bWJlciBvZiBiYXNlcyA9IFwoWzAtOSxdKlwpIGJwLiovXDEvcCcge2lucHV0LmNvdmVyfSB8IHRyIC1kICcsJykKICAgICAgICBtYXBfc2l6ZT0kKHNlZCAtbiAncy8uKm51bWJlciBvZiBtYXBwZWQgYmFzZXMgPSBcKFswLTksXSpcKSBicC4qL1wxL3AnIHtpbnB1dC5jb3Zlcn0gfCB0ciAtZCAnLCcpCgogICAgICAgIGdjPSQocHl0aG9uMyB7Z2V0X2pzb259IHtpbnB1dC5qc29ufSBzdW1tYXJ5LGFmdGVyX2ZpbHRlcmluZyxnY19jb250ZW50KQogICAgICAgIHEyMD0kKHB5dGhvbjMge2dldF9qc29ufSB7aW5wdXQuanNvbn0gc3VtbWFyeSxhZnRlcl9maWx0ZXJpbmcscTIwX3JhdGUpCiAgICAgICAgcTMwPSQocHl0aG9uMyB7Z2V0X2pzb259IHtpbnB1dC5qc29ufSBzdW1tYXJ5LGFmdGVyX2ZpbHRlcmluZyxxMzBfcmF0ZSkKICAgICAgICBjaHJtX251bT0kKHNhbXRvb2xzIHZpZXcgLWMge2lucHV0LmJhbX0gY2hyTSkKICAgICAgICAKICAgICAgICBobWNfY3BnPSQoYXdrICckNyA9PSAiQ3BHIiB7eyBzdW0gKz0gJDQ7IGNvdW50KysgfX0gRU5EIHt7IGlmIChjb3VudCA+IDApIHByaW50IHN1bSAvIGNvdW50IH19JyB7aW5wdXQuaG1jfSkgCiAgICAgICAgaG1jX2NoZz0kKGF3ayAnJDcgPT0gIkNIRyIge3sgc3VtICs9ICQ0OyBjb3VudCsrIH19IEVORCB7eyBpZiAoY291bnQgPiAwKSBwcmludCBzdW0gLyBjb3VudCB9fScge2lucHV0LmhtY30pIAogICAgICAgIGhtY19jaGg9JChhd2sgJyQ3ID09ICJDSEgiIHt7IHN1bSArPSAkNDsgY291bnQrKyB9fSBFTkQge3sgaWYgKGNvdW50ID4gMCkgcHJpbnQgc3VtIC8gY291bnQgfX0nIHtpbnB1dC5obWN9KQogICAgICAgIG1jX2NwZz0kKGF3ayAnJDcgPT0gIkNwRyIge3sgc3VtICs9ICQ0OyBjb3VudCsrIH19IEVORCB7eyBpZiAoY291bnQgPiAwKSBwcmludCBzdW0gLyBjb3VudCB9fScge2lucHV0Lm1jfSkKICAgICAgICBtY19jaGc9JChhd2sgJyQ3ID09ICJDSEciIHt7IHN1bSArPSAkNDsgY291bnQrKyB9fSBFTkQge3sgaWYgKGNvdW50ID4gMCkgcHJpbnQgc3VtIC8gY291bnQgfX0nIHtpbnB1dC5tY30pIAogICAgICAgIG1jX2NoaD0kKGF3ayAnJDcgPT0gIkNISCIge3sgc3VtICs9ICQ0OyBjb3VudCsrIH19IEVORCB7eyBpZiAoY291bnQgPiAwKSBwcmludCBzdW0gLyBjb3VudCB9fScge2lucHV0Lm1jfSkKCiAgICAgICAgaG1jPSIwIiQoZWNobyAic2NhbGU9NDsgJGhtY19jcGcvMSIgfCBiYykifDAiJChlY2hvICJzY2FsZT00OyAkaG1jX2NoZy8xIiB8IGJjKSJ8MCIkKGVjaG8gInNjYWxlPTQ7ICRobWNfY2hoLzEiIHwgYmMpCiAgICAgICAgbWM9IjAiJChlY2hvICJzY2FsZT00OyAkbWNfY3BnLzEiIHwgYmMpInwwIiQoZWNobyAic2NhbGU9NDsgJG1jX2NoZy8xIiB8IGJjKSJ8MCIkKGVjaG8gInNjYWxlPTQ7ICRtY19jaGgvMSIgfCBiYykKICAgICAgICB7YmVkdG9vbHN9IGdlbm9tZWNvdiAtaWJhbSB7aW5wdXQuc3BfYmFtfSAgLWJnYSA+IHtvdXRwdXQuYmVkfQogICAgICAgIGFsbF9zcGlrZWluPSQocHl0aG9uMyB7cHlfcmVmfS9zcGlrZWluLnB5IC0tYmVkIHtvdXRwdXQuYmVkfSAtLXNwaWtlaW4ge3BhcmFtcy5zcGlrZWlufSAgLS1obWMge2lucHV0LnNwX2htY30gLS1tYyB7aW5wdXQuc3BfbWN9KQogICAgICAgIAoKCiAgICAgCiAgICAgICAgWyAiJChlY2hvICIkcmF3X3JlYWRfbnVtID09IDAiIHwgYmMpIiAtZXEgMSBdICYmIHJhd19yZWFkX251bT0xMDAwMDAwMDAwMDAKICAgICAgICBbICIkKGVjaG8gIiRjbGVhbl9yZWFkX251bSA9PSAwIiB8IGJjKSIgLWVxIDEgXSAmJiBjbGVhbl9yZWFkX251bT0xMDAwMDAwMDAwMDAKICAgICAgICBbICIkKGVjaG8gIiRjb3ZlciA9PSAwIiB8IGJjKSIgLWVxIDEgXSAmJiBjb3Zlcj0xMDAwMDAwMDAwMDAKICAgICAgICBbICIkKGVjaG8gIiRtYXBfcmVhZF9udW0gPT0gMCIgfCBiYykiIC1lcSAxIF0gJiYgbWFwX3JlYWRfbnVtPTEwMDAwMDAwMDAwMAogICAgICAgICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKICAgICAgICBzZXF1ZW5jZV9zaXplPSQoZWNobyAic2NhbGU9NDsgJHJhd19zaXplLzEwMDAwMDAwMDAiIHwgYmMpCiAgICAgICAgY2xlYW5fcmVhZF9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICR0cmltZWRfcmVhZF9udW0vJHJhd19yZWFkX251bSIgfCBiYykKICAgICAgICBtYXRjaF9tb2RlbF9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRtb2RlbF9yZWFkX251bS8oJHRyaW1lZF9yZWFkX251bSoyKSIgfCBiYykKICAgICAgICBkdXBsaWNhdGlvbl9yYXRlPSQoZWNobyAic2NhbGU9NDsgKCgkY2xlYW5fcmVhZF9udW0tJGRlX3JlYWRfbnVtKS8kY2xlYW5fcmVhZF9udW0pIiB8IGJjKQogICAgICAgIG1hcF9yZWFkX3JhdGlvPSQoZWNobyAic2NhbGU9NDsgJG1hcF9yZWFkX251bS8kY2xlYW5fcmVhZF9udW0iIHwgYmMpCiAgICAgICAgYXZlcmFnZV9kZXB0aD0kKGVjaG8gInNjYWxlPTQ7ICRtYXBfc2l6ZS8oJGNvdmVyKiRyZWZfc2l6ZSowLjAxKSIgfCBiYykKCgogICAgICAgIG1pdF9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRjaHJtX251bS8kbWFwX3JlYWRfbnVtIiB8IGJjKQogICAgICAgIGdjX2ZpbHRlcl9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRnYy8xIiB8IGJjKQogICAgICAgIHEyMF9maWx0ZXJfcmF0aW89JChlY2hvICJzY2FsZT00OyAkcTIwLzEiIHwgYmMpCiAgICAgICAgcTMwX2ZpbHRlcl9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRxMzAvMSIgfCBiYykKCgogICAgICAgIGVjaG8gLWUgIm5hbWUJc2VxdWVuY2Vfc2l6ZQljbGVhbl9yZWFkX3JhdGlvCW1hdGNoX21vZGVsX3JhdGlvCWR1cGxpY2F0aW9uX3JhdGUJbWFwX3JlYWRfcmF0aW8JY292ZXJfcmF0aW8JYXZlcmFnZV9kZXB0aAlobWNfbGV2ZWwoQ3BHfENIR3xDSEgpCW1jX2xldmVsKENwR3xDSEd8Q0hIKQl7c3Bpa2Vpbl9saXN0fQlnY19maWx0ZXJfcmF0aW8JbWl0X3JhdGlvCXEyMF9maWx0ZXJfcmF0aW8JcTMwX2ZpbHRlcl9yYXRpbwl0b3RhbF9yZWFkc19yYXciID4ge291dHB1dC5sb2d9CgogICAgICAgIGVjaG8gLWUgIiRuYW1lCSRzZXF1ZW5jZV9zaXplKEcpCSRjbGVhbl9yZWFkX3JhdGlvCSRtYXRjaF9tb2RlbF9yYXRpbwkkZHVwbGljYXRpb25fcmF0ZQkkbWFwX3JlYWRfcmF0aW8JJGNvdmVyCSRhdmVyYWdlX2RlcHRoCSRobWMJJG1jCSRhbGxfc3Bpa2VpbgkkZ2NfZmlsdGVyX3JhdGlvCSRtaXRfcmF0aW8JJHEyMF9maWx0ZXJfcmF0aW8JJHEzMF9maWx0ZXJfcmF0aW8JJHJhd19yZWFkX251bSIgPj4ge291dHB1dC5sb2d9CiAgICAgICAglGgOaBGGlGWMBXNoZWxslIWUdJQu", "rule": "get_log", "input": ["/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/bam/CS-3w-caC.bam", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/cover/de_CS-3w-caC/genome_results.txt", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.hmc", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.mc", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam.all.bed.hmc", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam.all.bed.mc", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.fq", "/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json"], "log": [], "params": ["'CS-3w-caC'", "'lambda,mc,G5hmc,puc19'"], "shellcmd": "\n        name=$(echo CS-3w-caC)\n        raw_size=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,before_filtering,total_bases)\n        raw_read_num=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,before_filtering,total_reads)\n        trimed_read_num=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,after_filtering,total_reads)\n        model_read_num=$(wc -l < /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.fq)\n        dup_radio1=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json duplication,rate)\n\n        clean_read_num=$(samtools view -c /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/bam/CS-3w-caC.bam) \n        de_read_num=$(samtools view -c /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam)\n        map_read_num=$(samtools view -c -F 4 /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/bam/CS-3w-caC.bam)\n        \n        cover=$(sed -n 's/.*There is a \\([0-9.]*\\)\\% of reference with a coverageData >= 1X.*/\\1/p' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/cover/de_CS-3w-caC/genome_results.txt)\n        ref_size=$(sed -n 's/.*number of bases = \\([0-9,]*\\) bp.*/\\1/p' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/cover/de_CS-3w-caC/genome_results.txt | tr -d ',')\n        map_size=$(sed -n 's/.*number of mapped bases = \\([0-9,]*\\) bp.*/\\1/p' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/cover/de_CS-3w-caC/genome_results.txt | tr -d ',')\n\n        gc=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,after_filtering,gc_content)\n        q20=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,after_filtering,q20_rate)\n        q30=$(python3 /data/cailab/flask_snk/ref/get_json.py /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/trim/CS-3w-caC.json summary,after_filtering,q30_rate)\n        chrm_num=$(samtools view -c /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/bam/CS-3w-caC.bam chrM)\n        \n        hmc_cpg=$(awk '$7 == \"CpG\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.hmc) \n        hmc_chg=$(awk '$7 == \"CHG\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.hmc) \n        hmc_chh=$(awk '$7 == \"CHH\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.hmc)\n        mc_cpg=$(awk '$7 == \"CpG\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.mc)\n        mc_chg=$(awk '$7 == \"CHG\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.mc) \n        mc_chh=$(awk '$7 == \"CHH\" { sum += $4; count++ } END { if (count > 0) print sum / count }' /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/debam/de_CS-3w-caC.bam.all.bed.mc)\n\n        hmc=\"0\"$(echo \"scale=4; $hmc_cpg/1\" | bc)\"|0\"$(echo \"scale=4; $hmc_chg/1\" | bc)\"|0\"$(echo \"scale=4; $hmc_chh/1\" | bc)\n        mc=\"0\"$(echo \"scale=4; $mc_cpg/1\" | bc)\"|0\"$(echo \"scale=4; $mc_chg/1\" | bc)\"|0\"$(echo \"scale=4; $mc_chh/1\" | bc)\n        /data/biosoft/soft2024/bedtools/bedtools2/bin/bedtools genomecov -ibam /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam  -bga > /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bed\n        all_spikein=$(python3 /data/cailab/flask_snk/ref/spikein.py --bed /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bed --spikein lambda,mc,G5hmc,puc19  --hmc /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam.all.bed.hmc --mc /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/sp_bam/sp_CS-3w-caC.bam.all.bed.mc)\n        \n\n\n     \n        [ \"$(echo \"$raw_read_num == 0\" | bc)\" -eq 1 ] && raw_read_num=100000000000\n        [ \"$(echo \"$clean_read_num == 0\" | bc)\" -eq 1 ] && clean_read_num=100000000000\n        [ \"$(echo \"$cover == 0\" | bc)\" -eq 1 ] && cover=100000000000\n        [ \"$(echo \"$map_read_num == 0\" | bc)\" -eq 1 ] && map_read_num=100000000000\n        ########################################\n        sequence_size=$(echo \"scale=4; $raw_size/1000000000\" | bc)\n        clean_read_ratio=$(echo \"scale=4; $trimed_read_num/$raw_read_num\" | bc)\n        match_model_ratio=$(echo \"scale=4; $model_read_num/($trimed_read_num*2)\" | bc)\n        duplication_rate=$(echo \"scale=4; (($clean_read_num-$de_read_num)/$clean_read_num)\" | bc)\n        map_read_ratio=$(echo \"scale=4; $map_read_num/$clean_read_num\" | bc)\n        average_depth=$(echo \"scale=4; $map_size/($cover*$ref_size*0.01)\" | bc)\n\n\n        mit_ratio=$(echo \"scale=4; $chrm_num/$map_read_num\" | bc)\n        gc_filter_ratio=$(echo \"scale=4; $gc/1\" | bc)\n        q20_filter_ratio=$(echo \"scale=4; $q20/1\" | bc)\n        q30_filter_ratio=$(echo \"scale=4; $q30/1\" | bc)\n\n\n        echo -e \"name\tsequence_size\tclean_read_ratio\tmatch_model_ratio\tduplication_rate\tmap_read_ratio\tcover_ratio\taverage_depth\thmc_level(CpG|CHG|CHH)\tmc_level(CpG|CHG|CHH)\tlambda_(cover|dep)\tlambda_hmc(CpG|CHG|CHH)\tlambda_mc(CpG|CHG|CHH)\tmc_(cover|dep)\tmc_hmc(CpG|CHG|CHH)\tmc_mc(CpG|CHG|CHH)\tG5hmc_(cover|dep)\tG5hmc_hmc(CpG|CHG|CHH)\tG5hmc_mc(CpG|CHG|CHH)\tpuc19_(cover|dep)\tpuc19_hmc(CpG|CHG|CHH)\tpuc19_mc(CpG|CHG|CHH)\tgc_filter_ratio\tmit_ratio\tq20_filter_ratio\tq30_filter_ratio\ttotal_reads_raw\" > /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/final_log/CS-3w-caC.log\n\n        echo -e \"$name\t$sequence_size(G)\t$clean_read_ratio\t$match_model_ratio\t$duplication_rate\t$map_read_ratio\t$cover\t$average_depth\t$hmc\t$mc\t$all_spikein\t$gc_filter_ratio\t$mit_ratio\t$q20_filter_ratio\t$q30_filter_ratio\t$raw_read_num\" >> /data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/final_log/CS-3w-caC.log\n        ", "incomplete": false, "starttime": 1715274375.270113, "endtime": 1715274462.8115034, "job_hash": 8739604146198, "conda_env": "bmFtZTogZmxhc2syMDI0CmNoYW5uZWxzOgogIC0gY29uZGEtZm9yZ2UKICAtIGJpb2NvbmRhCiAgLSBkZWZhdWx0cwpkZXBlbmRlbmNpZXM6CiAgLSBfbGliZ2NjX211dGV4PTAuMT1jb25kYV9mb3JnZQogIC0gX29wZW5tcF9tdXRleD00LjU9Ml9nbnUKICAtIGJ6aXAyPTEuMC44PWhkNTkwMzAwXzUKICAtIGNhLWNlcnRpZmljYXRlcz0yMDI0LjIuMj1oYmNjYTA1NF8wCiAgLSBsZF9pbXBsX2xpbnV4LTY0PTIuNDA9aDU1ZGI2NmVfMAogIC0gbGliZmZpPTMuNC4yPWg3Zjk4ODUyXzUKICAtIGxpYmdjYy1uZz0xMy4yLjA9aGM4ODFjYzRfNgogIC0gbGliZ29tcD0xMy4yLjA9aGM4ODFjYzRfNgogIC0gbGlibnNsPTIuMC4xPWhkNTkwMzAwXzAKICAtIGxpYnNxbGl0ZT0zLjQ1LjM9aDI3OTcwMDRfMAogIC0gbGlidXVpZD0yLjM4LjE9aDBiNDFiZjRfMAogIC0gbGlieGNyeXB0PTQuNC4zNj1oZDU5MDMwMF8xCiAgLSBsaWJ6bGliPTEuMi4xMz1oZDU5MDMwMF81CiAgLSBuY3Vyc2VzPTYuNC4yMDI0MDIxMD1oNTk1OTVlZF8wCiAgLSBvcGVuc3NsPTMuMi4xPWhkNTkwMzAwXzEKICAtIHBpcD0yNC4wPXB5aGQ4ZWQxYWJfMAogIC0gcHl0aG9uPTMuOS4xOT1oMDc1NTY3NV8wX2NweXRob24KICAtIHJlYWRsaW5lPTguMj1oODIyODUxMF8xCiAgLSBzZXR1cHRvb2xzPTY5LjUuMT1weWhkOGVkMWFiXzAKICAtIHRrPTguNi4xMz1ub3hmdF9oNDg0NWYzMF8xMDEKICAtIHdoZWVsPTAuNDMuMD1weWhkOGVkMWFiXzEKICAtIHh6PTUuMi42PWgxNjZiZGFmXzAKICAtIHBpcDoKICAgICAgLSBhcHBkaXJzPT0xLjQuNAogICAgICAtIGF0dHJzPT0yMy4yLjAKICAgICAgLSBiaW89PTEuNi4yCiAgICAgIC0gYmlvcHl0aG9uPT0xLjgzCiAgICAgIC0gYmlvdGhpbmdzLWNsaWVudD09MC4zLjEKICAgICAgLSBibGlua2VyPT0xLjguMQogICAgICAtIGJvb3RzdHJhcC1mbGFzaz09Mi40LjAKICAgICAgLSBjZXJ0aWZpPT0yMDI0LjIuMgogICAgICAtIGNoYXJzZXQtbm9ybWFsaXplcj09My4zLjIKICAgICAgLSBjbGljaz09OC4xLjcKICAgICAgLSBjb25maWdhcmdwYXJzZT09MS43CiAgICAgIC0gY29ubmVjdGlvbi1wb29sPT0wLjAuMwogICAgICAtIGRhdHJpZT09MC44LjIKICAgICAgLSBkb2N1dGlscz09MC4yMS4yCiAgICAgIC0gZHBhdGg9PTIuMS42CiAgICAgIC0gZmFzdGpzb25zY2hlbWE9PTIuMTkuMQogICAgICAtIGZsYXNrPT0zLjAuMwogICAgICAtIGZsYXNrLXd0Zj09MS4yLjEKICAgICAgLSBnaXRkYj09NC4wLjExCiAgICAgIC0gZ2l0cHl0aG9uPT0zLjEuNDMKICAgICAgLSBncHJvZmlsZXItb2ZmaWNpYWw9PTEuMC4wCiAgICAgIC0gZ3VuaWNvcm49PTIyLjAuMAogICAgICAtIGh1bWFuZnJpZW5kbHk9PTEwLjAKICAgICAgLSBpZG5hPT0zLjcKICAgICAgLSBpbXBvcnRsaWItbWV0YWRhdGE9PTcuMS4wCiAgICAgIC0gaXRzZGFuZ2Vyb3VzPT0yLjIuMAogICAgICAtIGppbmphMj09My4xLjMKICAgICAgLSBqc29uc2NoZW1hPT00LjIxLjEKICAgICAgLSBqc29uc2NoZW1hLXNwZWNpZmljYXRpb25zPT0yMDIzLjEyLjEKICAgICAgLSBqdXB5dGVyLWNvcmU9PTUuNy4yCiAgICAgIC0gbGV2ZW5zaHRlaW49PTAuMjUuMQogICAgICAtIG1hcmt1cHNhZmU9PTIuMS41CiAgICAgIC0gbXlnZW5lPT0zLjIuMgogICAgICAtIG5iZm9ybWF0PT01LjEwLjQKICAgICAgLSBudW1weT09MS4yNi40CiAgICAgIC0gcGFja2FnaW5nPT0yNC4wCiAgICAgIC0gcGFuZGFzPT0yLjIuMgogICAgICAtIHBsYWM9PTEuNC4zCiAgICAgIC0gcGxhdGZvcm1kaXJzPT00LjIuMQogICAgICAtIHBvb2NoPT0xLjguMQogICAgICAtIHBzdXRpbD09NS45LjgKICAgICAgLSBwdWxwPT0yLjguMAogICAgICAtIHB5c2FtPT0wLjIyLjEKICAgICAgLSBweXRob24tZGF0ZXV0aWw9PTIuOS4wLnBvc3QwCiAgICAgIC0gcHl0ej09MjAyNC4xCiAgICAgIC0gcHl5YW1sPT02LjAuMQogICAgICAtIHJhcGlkZnV6ej09My45LjAKICAgICAgLSByZWZlcmVuY2luZz09MC4zNS4wCiAgICAgIC0gcmVxdWVzdHM9PTIuMzEuMAogICAgICAtIHJlcmV0cnk9PTAuMTEuOAogICAgICAtIHJwZHMtcHk9PTAuMTguMAogICAgICAtIHNpeD09MS4xNi4wCiAgICAgIC0gc21hcnQtb3Blbj09Ny4wLjQKICAgICAgLSBzbW1hcD09NS4wLjEKICAgICAgLSBzdG9waXQ9PTEuMS4yCiAgICAgIC0gdGFidWxhdGU9PTAuOS4wCiAgICAgIC0gdGhyb3R0bGVyPT0xLjIuMgogICAgICAtIHRvcG9zb3J0PT0xLjEwCiAgICAgIC0gdHFkbT09NC42Ni40CiAgICAgIC0gdHJhaXRsZXRzPT01LjE0LjMKICAgICAgLSB0emRhdGE9PTIwMjQuMQogICAgICAtIHVybGxpYjM9PTIuMi4xCiAgICAgIC0gd2Vya3pldWc9PTMuMC4yCiAgICAgIC0gd3JhcHQ9PTEuMTYuMAogICAgICAtIHd0Zm9ybXM9PTMuMS4yCiAgICAgIC0geXRlPT0xLjUuNAogICAgICAtIHppcHA9PTMuMTguMQpwcmVmaXg6IC9kYXRhL2Jpb3NvZnQvc29mdDIwMjQvY29uZGEvYW5hY29uZGFfMjMuNC43L2VudnMvZmxhc2syMDI0Cg==", "container_img_url": null, "input_checksums": {"/data/cailab/flask_output/20240510003405-1c4f156d-9eaf-4b49-8568-95871673cd4d/cover/de_CS-3w-caC/genome_results.txt": "aea3fb04d1acb49ca5a05ddcc6e1807cc6c269927c9c1a72fe89f1019a3db6d7"}}