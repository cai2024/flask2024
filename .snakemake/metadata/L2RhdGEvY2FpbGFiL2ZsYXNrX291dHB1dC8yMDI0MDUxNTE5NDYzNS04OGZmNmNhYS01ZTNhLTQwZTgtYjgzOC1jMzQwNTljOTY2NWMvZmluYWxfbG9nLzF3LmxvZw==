{"code": "gASVYAwAAAAAAAAoQyqXAHQBAAAAAAAAAAAAAGQBfA18EKwCpgMAAKsDAAAAAAAAAAABAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwEcnVsZZSMCWNvbmRhX2VudpSMDWNvbnRhaW5lcl9pbWeUjBBzaW5ndWxhcml0eV9hcmdzlIwPdXNlX3Npbmd1bGFyaXR5lIwLZW52X21vZHVsZXOUjAxiZW5jaF9yZWNvcmSUjAVqb2JpZJSMCGlzX3NoZWxslIwPYmVuY2hfaXRlcmF0aW9ulIwPY2xlYW51cF9zY3JpcHRzlIwKc2hhZG93X2RpcpSMDWVkaXRfbm90ZWJvb2uUjA9jb25kYV9iYXNlX3BhdGiUjAdiYXNlZGlylIwQc291cmNlY2FjaGVfcGF0aJSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YsQoAAAogICAgICAgIG5hbWU9JChlY2hvIHtwYXJhbXMubXlfc2FtcGxlfSkKICAgICAgICByYXdfc2l6ZT0kKHB5dGhvbjMge3B5X3JlZn0vZ2V0X2pzb24ucHkge2lucHV0Lmpzb259IHN1bW1hcnksYmVmb3JlX2ZpbHRlcmluZyx0b3RhbF9iYXNlcykKICAgICAgICByYXdfcmVhZF9udW09JChweXRob24zIHtweV9yZWZ9L2dldF9qc29uLnB5IHtpbnB1dC5qc29ufSBzdW1tYXJ5LGJlZm9yZV9maWx0ZXJpbmcsdG90YWxfcmVhZHMpCiAgICAgICAgZHVwX3JhZGlvMT0kKHB5dGhvbjMge3B5X3JlZn0vZ2V0X2pzb24ucHkge2lucHV0Lmpzb259IGR1cGxpY2F0aW9uLHJhdGUpCgogICAgICAgIGNsZWFuX3JlYWRfbnVtPSQoc2FtdG9vbHMgdmlldyAtYyB7aW5wdXQuYmFtfSkgCiAgICAgICAgZGVfcmVhZF9udW09JChzYW10b29scyB2aWV3IC1jIHtpbnB1dC5kZWR1cF9iYW19KQogICAgICAgIG1hcF9yZWFkX251bT0kKHNhbXRvb2xzIHZpZXcgLWMgLUYgNCB7aW5wdXQuYmFtfSkKICAgICAgICAKICAgICAgICBjb3Zlcj0kKHNlZCAtbiAncy8uKlRoZXJlIGlzIGEgXChbMC05Ll0qXClcJSBvZiByZWZlcmVuY2Ugd2l0aCBhIGNvdmVyYWdlRGF0YSA+PSAxWC4qL1wxL3AnIHtpbnB1dC5jb3Zlcn0pCiAgICAgICAgcmVmX3NpemU9JChzZWQgLW4gJ3MvLipudW1iZXIgb2YgYmFzZXMgPSBcKFswLTksXSpcKSBicC4qL1wxL3AnIHtpbnB1dC5jb3Zlcn0gfCB0ciAtZCAnLCcpCiAgICAgICAgbWFwX3NpemU9JChzZWQgLW4gJ3MvLipudW1iZXIgb2YgbWFwcGVkIGJhc2VzID0gXChbMC05LF0qXCkgYnAuKi9cMS9wJyB7aW5wdXQuY292ZXJ9IHwgdHIgLWQgJywnKQoKICAgICAgICBnYz0kKHB5dGhvbjMge3B5X3JlZn0vZ2V0X2pzb24ucHkge2lucHV0Lmpzb259IHN1bW1hcnksYWZ0ZXJfZmlsdGVyaW5nLGdjX2NvbnRlbnQpCiAgICAgICAgcTIwPSQocHl0aG9uMyB7cHlfcmVmfS9nZXRfanNvbi5weSB7aW5wdXQuanNvbn0gc3VtbWFyeSxhZnRlcl9maWx0ZXJpbmcscTIwX3JhdGUpCiAgICAgICAgcTMwPSQocHl0aG9uMyB7cHlfcmVmfS9nZXRfanNvbi5weSB7aW5wdXQuanNvbn0gc3VtbWFyeSxhZnRlcl9maWx0ZXJpbmcscTMwX3JhdGUpCiAgICAgICAgY2hybV9udW09JChzYW10b29scyB2aWV3IC1jIHtpbnB1dC5iYW19IGNock0pCgoKICAgICAgICBhbGxfc3Bpa2Vpbj0kKHB5dGhvbjMge3B5X3JlZn0vc3Bpa2Vpbi5weSAtLWJlZCB7aW5wdXQuYmVkfSAtLXNwaWtlaW4ge3BhcmFtcy5zcGlrZWlufSAtLWhtYyBobWMuYmVkKQoKCgogICAgIAogICAgICAgIFsgIiQoZWNobyAiJHJhd19yZWFkX251bSA9PSAwIiB8IGJjKSIgLWVxIDEgXSAmJiByYXdfcmVhZF9udW09MTAwMDAwMDAwMDAwCiAgICAgICAgWyAiJChlY2hvICIkY2xlYW5fcmVhZF9udW0gPT0gMCIgfCBiYykiIC1lcSAxIF0gJiYgY2xlYW5fcmVhZF9udW09MTAwMDAwMDAwMDAwCiAgICAgICAgWyAiJChlY2hvICIkY292ZXIgPT0gMCIgfCBiYykiIC1lcSAxIF0gJiYgY292ZXI9MTAwMDAwMDAwMDAwCiAgICAgICAgWyAiJChlY2hvICIkbWFwX3JlYWRfbnVtID09IDAiIHwgYmMpIiAtZXEgMSBdICYmIG1hcF9yZWFkX251bT0xMDAwMDAwMDAwMDAKICAgICAgICAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiAgICAgICAgc2VxdWVuY2Vfc2l6ZT0kKGVjaG8gInNjYWxlPTQ7ICRyYXdfc2l6ZS8xMDAwMDAwMDAwIiB8IGJjKQogICAgICAgIGNsZWFuX3JlYWRfcmF0aW89JChlY2hvICJzY2FsZT00OyAkY2xlYW5fcmVhZF9udW0vJHJhd19yZWFkX251bSIgfCBiYykKICAgICAgICBkdXBsaWNhdGlvbl9yYXRlPSQoZWNobyAic2NhbGU9NDsgKCgkY2xlYW5fcmVhZF9udW0tJGRlX3JlYWRfbnVtKS8kcmF3X3JlYWRfbnVtKSskZHVwX3JhZGlvMSIgfCBiYykKICAgICAgICBtYXBfcmVhZF9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRtYXBfcmVhZF9udW0vJGNsZWFuX3JlYWRfbnVtIiB8IGJjKQogICAgICAgIGF2ZXJhZ2VfZGVwdGg9JChlY2hvICJzY2FsZT00OyAkbWFwX3NpemUvKCRjb3ZlciokcmVmX3NpemUqMC4wMSkiIHwgYmMpCiAgICAgICAgbWl0X3JhdGlvPSQoZWNobyAic2NhbGU9NDsgJGNocm1fbnVtLyRtYXBfcmVhZF9udW0iIHwgYmMpCgogICAgICAgIGdjX2ZpbHRlcl9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRnYy8xIiB8IGJjKQogICAgICAgIHEyMF9maWx0ZXJfcmF0aW89JChlY2hvICJzY2FsZT00OyAkcTIwLzEiIHwgYmMpCiAgICAgICAgcTMwX2ZpbHRlcl9yYXRpbz0kKGVjaG8gInNjYWxlPTQ7ICRxMzAvMSIgfCBiYykKCgogICAgICAgIGVjaG8gLWUgIm5hbWUJc2VxdWVuY2Vfc2l6ZQljbGVhbl9yZWFkX3JhdGlvCWR1cGxpY2F0aW9uX3JhdGUJbWFwX3JlYWRfcmF0aW8JY292ZXJfcmF0aW8JYXZlcmFnZV9kZXB0aAl7c3Bpa2Vpbl9saXN0fQlnY19maWx0ZXJfcmF0aW8JbWl0X3JhdGlvCXEyMF9maWx0ZXJfcmF0aW8JcTMwX2ZpbHRlcl9yYXRpbwl0b3RhbF9yZWFkc19yYXciID4ge291dHB1dC5sb2d9CgogICAgICAgIGVjaG8gLWUgIiRuYW1lCSRzZXF1ZW5jZV9zaXplCSRjbGVhbl9yZWFkX3JhdGlvCSRkdXBsaWNhdGlvbl9yYXRlCSRtYXBfcmVhZF9yYXRpbwkkY292ZXIJJGF2ZXJhZ2VfZGVwdGgJJGFsbF9zcGlrZWluCSRnY19maWx0ZXJfcmF0aW8JJG1pdF9yYXRpbwkkcTIwX2ZpbHRlcl9yYXRpbwkkcTMwX2ZpbHRlcl9yYXRpbwkkcmF3X3JlYWRfbnVtIiA+PiB7b3V0cHV0LmxvZ30KICAgICAgICCUaA5oEYaUZYwFc2hlbGyUhZR0lC4=", "rule": "get_log", "input": ["/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/bam/1w_pair.bam", "/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/cover/1w/genome_results.txt", "/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/debam/1w_dedup.bam", "/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/sp_bam/sp_1w.bed", "/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json"], "log": [], "params": ["'1w'", "'lambda,mc,G5hmc,puc19'"], "shellcmd": "\n        name=$(echo 1w)\n        raw_size=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json summary,before_filtering,total_bases)\n        raw_read_num=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json summary,before_filtering,total_reads)\n        dup_radio1=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json duplication,rate)\n\n        clean_read_num=$(samtools view -c /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/bam/1w_pair.bam) \n        de_read_num=$(samtools view -c /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/debam/1w_dedup.bam)\n        map_read_num=$(samtools view -c -F 4 /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/bam/1w_pair.bam)\n        \n        cover=$(sed -n 's/.*There is a \\([0-9.]*\\)\\% of reference with a coverageData >= 1X.*/\\1/p' /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/cover/1w/genome_results.txt)\n        ref_size=$(sed -n 's/.*number of bases = \\([0-9,]*\\) bp.*/\\1/p' /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/cover/1w/genome_results.txt | tr -d ',')\n        map_size=$(sed -n 's/.*number of mapped bases = \\([0-9,]*\\) bp.*/\\1/p' /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/cover/1w/genome_results.txt | tr -d ',')\n\n        gc=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json summary,after_filtering,gc_content)\n        q20=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json summary,after_filtering,q20_rate)\n        q30=$(python3 /data/cailab/flask2024/flask_snk/ref/get_json.py /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/trim/1w_pair.json summary,after_filtering,q30_rate)\n        chrm_num=$(samtools view -c /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/bam/1w_pair.bam chrM)\n\n\n        all_spikein=$(python3 /data/cailab/flask2024/flask_snk/ref/spikein.py --bed /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/sp_bam/sp_1w.bed --spikein lambda,mc,G5hmc,puc19 --hmc hmc.bed)\n\n\n\n     \n        [ \"$(echo \"$raw_read_num == 0\" | bc)\" -eq 1 ] && raw_read_num=100000000000\n        [ \"$(echo \"$clean_read_num == 0\" | bc)\" -eq 1 ] && clean_read_num=100000000000\n        [ \"$(echo \"$cover == 0\" | bc)\" -eq 1 ] && cover=100000000000\n        [ \"$(echo \"$map_read_num == 0\" | bc)\" -eq 1 ] && map_read_num=100000000000\n        ########################################\n        sequence_size=$(echo \"scale=4; $raw_size/1000000000\" | bc)\n        clean_read_ratio=$(echo \"scale=4; $clean_read_num/$raw_read_num\" | bc)\n        duplication_rate=$(echo \"scale=4; (($clean_read_num-$de_read_num)/$raw_read_num)+$dup_radio1\" | bc)\n        map_read_ratio=$(echo \"scale=4; $map_read_num/$clean_read_num\" | bc)\n        average_depth=$(echo \"scale=4; $map_size/($cover*$ref_size*0.01)\" | bc)\n        mit_ratio=$(echo \"scale=4; $chrm_num/$map_read_num\" | bc)\n\n        gc_filter_ratio=$(echo \"scale=4; $gc/1\" | bc)\n        q20_filter_ratio=$(echo \"scale=4; $q20/1\" | bc)\n        q30_filter_ratio=$(echo \"scale=4; $q30/1\" | bc)\n\n\n        echo -e \"name\tsequence_size\tclean_read_ratio\tduplication_rate\tmap_read_ratio\tcover_ratio\taverage_depth\tlambda_(cover|dep)\tmc_(cover|dep)\tG5hmc_(cover|dep)\tpuc19_(cover|dep)\tgc_filter_ratio\tmit_ratio\tq20_filter_ratio\tq30_filter_ratio\ttotal_reads_raw\" > /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/final_log/1w.log\n\n        echo -e \"$name\t$sequence_size\t$clean_read_ratio\t$duplication_rate\t$map_read_ratio\t$cover\t$average_depth\t$all_spikein\t$gc_filter_ratio\t$mit_ratio\t$q20_filter_ratio\t$q30_filter_ratio\t$raw_read_num\" >> /data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/final_log/1w.log\n        ", "incomplete": false, "starttime": 1715773636.1257424, "endtime": 1715773636.6157782, "job_hash": 8730694423043, "conda_env": "bmFtZTogZmxhc2syMDI0CmNoYW5uZWxzOgogIC0gY29uZGEtZm9yZ2UKICAtIGJpb2NvbmRhCiAgLSBkZWZhdWx0cwpkZXBlbmRlbmNpZXM6CiAgLSBfbGliZ2NjX211dGV4PTAuMT1jb25kYV9mb3JnZQogIC0gX29wZW5tcF9tdXRleD00LjU9Ml9nbnUKICAtIGJ6aXAyPTEuMC44PWhkNTkwMzAwXzUKICAtIGNhLWNlcnRpZmljYXRlcz0yMDI0LjIuMj1oYmNjYTA1NF8wCiAgLSBsZF9pbXBsX2xpbnV4LTY0PTIuNDA9aDU1ZGI2NmVfMAogIC0gbGliZmZpPTMuNC4yPWg3Zjk4ODUyXzUKICAtIGxpYmdjYy1uZz0xMy4yLjA9aGM4ODFjYzRfNgogIC0gbGliZ29tcD0xMy4yLjA9aGM4ODFjYzRfNgogIC0gbGlibnNsPTIuMC4xPWhkNTkwMzAwXzAKICAtIGxpYnNxbGl0ZT0zLjQ1LjM9aDI3OTcwMDRfMAogIC0gbGlidXVpZD0yLjM4LjE9aDBiNDFiZjRfMAogIC0gbGlieGNyeXB0PTQuNC4zNj1oZDU5MDMwMF8xCiAgLSBsaWJ6bGliPTEuMi4xMz1oZDU5MDMwMF81CiAgLSBuY3Vyc2VzPTYuNC4yMDI0MDIxMD1oNTk1OTVlZF8wCiAgLSBvcGVuc3NsPTMuMi4xPWhkNTkwMzAwXzEKICAtIHBpcD0yNC4wPXB5aGQ4ZWQxYWJfMAogIC0gcHl0aG9uPTMuOS4xOT1oMDc1NTY3NV8wX2NweXRob24KICAtIHJlYWRsaW5lPTguMj1oODIyODUxMF8xCiAgLSBzZXR1cHRvb2xzPTY5LjUuMT1weWhkOGVkMWFiXzAKICAtIHRrPTguNi4xMz1ub3hmdF9oNDg0NWYzMF8xMDEKICAtIHdoZWVsPTAuNDMuMD1weWhkOGVkMWFiXzEKICAtIHh6PTUuMi42PWgxNjZiZGFmXzAKICAtIHBpcDoKICAgICAgLSBhcHBkaXJzPT0xLjQuNAogICAgICAtIGF0dHJzPT0yMy4yLjAKICAgICAgLSBiaW89PTEuNi4yCiAgICAgIC0gYmlvcHl0aG9uPT0xLjgzCiAgICAgIC0gYmlvdGhpbmdzLWNsaWVudD09MC4zLjEKICAgICAgLSBibGlua2VyPT0xLjguMQogICAgICAtIGJvb3RzdHJhcC1mbGFzaz09Mi40LjAKICAgICAgLSBjZXJ0aWZpPT0yMDI0LjIuMgogICAgICAtIGNoYXJzZXQtbm9ybWFsaXplcj09My4zLjIKICAgICAgLSBjbGljaz09OC4xLjcKICAgICAgLSBjb25maWdhcmdwYXJzZT09MS43CiAgICAgIC0gY29ubmVjdGlvbi1wb29sPT0wLjAuMwogICAgICAtIGRhdHJpZT09MC44LjIKICAgICAgLSBkb2N1dGlscz09MC4yMS4yCiAgICAgIC0gZHBhdGg9PTIuMS42CiAgICAgIC0gZmFzdGpzb25zY2hlbWE9PTIuMTkuMQogICAgICAtIGZsYXNrPT0zLjAuMwogICAgICAtIGZsYXNrLXd0Zj09MS4yLjEKICAgICAgLSBnaXRkYj09NC4wLjExCiAgICAgIC0gZ2l0cHl0aG9uPT0zLjEuNDMKICAgICAgLSBncHJvZmlsZXItb2ZmaWNpYWw9PTEuMC4wCiAgICAgIC0gZ3VuaWNvcm49PTIyLjAuMAogICAgICAtIGh1bWFuZnJpZW5kbHk9PTEwLjAKICAgICAgLSBpZG5hPT0zLjcKICAgICAgLSBpbXBvcnRsaWItbWV0YWRhdGE9PTcuMS4wCiAgICAgIC0gaXRzZGFuZ2Vyb3VzPT0yLjIuMAogICAgICAtIGppbmphMj09My4xLjMKICAgICAgLSBqc29uc2NoZW1hPT00LjIxLjEKICAgICAgLSBqc29uc2NoZW1hLXNwZWNpZmljYXRpb25zPT0yMDIzLjEyLjEKICAgICAgLSBqdXB5dGVyLWNvcmU9PTUuNy4yCiAgICAgIC0gbGV2ZW5zaHRlaW49PTAuMjUuMQogICAgICAtIG1hcmt1cHNhZmU9PTIuMS41CiAgICAgIC0gbXlnZW5lPT0zLjIuMgogICAgICAtIG5iZm9ybWF0PT01LjEwLjQKICAgICAgLSBudW1weT09MS4yNi40CiAgICAgIC0gcGFja2FnaW5nPT0yNC4wCiAgICAgIC0gcGFuZGFzPT0yLjIuMgogICAgICAtIHBsYWM9PTEuNC4zCiAgICAgIC0gcGxhdGZvcm1kaXJzPT00LjIuMQogICAgICAtIHBvb2NoPT0xLjguMQogICAgICAtIHBzdXRpbD09NS45LjgKICAgICAgLSBwdWxwPT0yLjguMAogICAgICAtIHB5c2FtPT0wLjIyLjEKICAgICAgLSBweXRob24tZGF0ZXV0aWw9PTIuOS4wLnBvc3QwCiAgICAgIC0gcHl0ej09MjAyNC4xCiAgICAgIC0gcHl5YW1sPT02LjAuMQogICAgICAtIHJhcGlkZnV6ej09My45LjAKICAgICAgLSByZWZlcmVuY2luZz09MC4zNS4wCiAgICAgIC0gcmVxdWVzdHM9PTIuMzEuMAogICAgICAtIHJlcmV0cnk9PTAuMTEuOAogICAgICAtIHJwZHMtcHk9PTAuMTguMAogICAgICAtIHNpeD09MS4xNi4wCiAgICAgIC0gc21hcnQtb3Blbj09Ny4wLjQKICAgICAgLSBzbW1hcD09NS4wLjEKICAgICAgLSBzdG9waXQ9PTEuMS4yCiAgICAgIC0gdGFidWxhdGU9PTAuOS4wCiAgICAgIC0gdGhyb3R0bGVyPT0xLjIuMgogICAgICAtIHRvcG9zb3J0PT0xLjEwCiAgICAgIC0gdHFkbT09NC42Ni40CiAgICAgIC0gdHJhaXRsZXRzPT01LjE0LjMKICAgICAgLSB0emRhdGE9PTIwMjQuMQogICAgICAtIHVybGxpYjM9PTIuMi4xCiAgICAgIC0gd2Vya3pldWc9PTMuMC4yCiAgICAgIC0gd3JhcHQ9PTEuMTYuMAogICAgICAtIHd0Zm9ybXM9PTMuMS4yCiAgICAgIC0geXRlPT0xLjUuNAogICAgICAtIHppcHA9PTMuMTguMQpwcmVmaXg6IC9kYXRhL2Jpb3NvZnQvc29mdDIwMjQvY29uZGEvYW5hY29uZGFfMjMuNC43L2VudnMvZmxhc2syMDI0Cg==", "container_img_url": null, "input_checksums": {"/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/cover/1w/genome_results.txt": "81ccace4d809bbd9cd08f534f21bae5e66f8d8481f2937df15e2c020ba75bb54", "/data/cailab/flask_output/20240515194635-88ff6caa-5e3a-40e8-b838-c34059c9665c/sp_bam/sp_1w.bed": "8bdcabf9bed924aa43e3f06d8b01b75a7650e0a7862b7749068a38443cbccd6c"}}